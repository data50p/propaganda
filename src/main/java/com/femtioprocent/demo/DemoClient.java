/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DemoClient.java
 *
 * Created on 2011-apr-03, 19:37:16
 */
package com.femtioprocent.demo;

import com.femtioprocent.propaganda.server.PropagandaServer;
import com.femtioprocent.propaganda.data.Datagram;
import com.femtioprocent.propaganda.data.Message;
import com.femtioprocent.propaganda.data.MessageType;
import com.femtioprocent.propaganda.data.AddrType;
import com.femtioprocent.propaganda.connector.PropagandaConnector;
import com.femtioprocent.propaganda.connector.PropagandaConnectorFactory;
import com.femtioprocent.propaganda.connector.Connector_Plain;
import com.femtioprocent.propaganda.client.PropagandaClient;
import java.util.Date;
import com.femtioprocent.propaganda.exception.PropagandaException;

/**
 *
 * @author lars
 */
public class DemoClient extends javax.swing.JFrame {

    PropagandaServer server = PropagandaServer.getDefaultServer("DemoClient");

    public static interface Eval {

        public String eval(PropagandaConnector connector, Datagram datagram);
    }

    class MyPropagandaClient extends PropagandaClient {

        private Eval eval;

        public MyPropagandaClient(Eval eval) {
            super("demoClient-" + (new Date()).getTime());
            this.eval = eval;
            init();
        }

        @Override
        protected void init() {

            final Connector_Plain connector = (Connector_Plain) PropagandaConnectorFactory.create("Plain", "DemoClient", server, this);
            connector.connect();
            System.err.println("connector " + connector);

            Thread th2 = new Thread(new Runnable() {

                public void run() {
                    try {
                        for (;;) {
                            Datagram datagram = connector.recvMsg();
                            if (datagram.getMessageType() == MessageType.ping) {
                                sendMsg(new Datagram(getDefaultAddrType(), datagram.getSender(), MessageType.pong, datagram.getMessage()));
                                System.err.println("got datagram: " + name + " =----> PING " + datagram);
                            } else if (datagram.getMessageType() == MessageType.pong) {
                                System.err.println("got datagram: " + name + " =----> PONG " + datagram);
                                receivedMsgs.append("received PONG from " + datagram.getSender().getUnsecureAddrTypeString() + "\n");
                            } else if (datagram.getMessageType() == MessageType.plain) {
                                System.err.println("got datagram: " + name + " =----> " + datagram);
                                if (eval != null) {
                                    eval.eval(connector, datagram);
                                }
                            } else {
                                System.err.println("got datagram: _ " + name + " =----> " + datagram);
                            }
                        }
                    } catch (Exception ex) {
                        System.err.println("Exception " + ex);
                    }
                }
            });
            th2.start();
            try {
                register("demo");
                final String name_id = name + "@demo";
                myRegName.setText("My registred name: " + name_id);
                sendTo.getModel().setSelectedItem(name_id);
                sendFrom.addItem(name_id);
            } catch (PropagandaException ex) {
                myRegName.setText("NO SERVER RUNNING: " + ex);
            }
        }
    }

    PropagandaClient propagandaClient;

    /**
     * Creates new form Client
     */
    public DemoClient() {
        initComponents();
        initPropaganda();
        status.setText("Status: running");
    }

    int rcnt = 0;

    private void initPropaganda() {
        propagandaClient = new MyPropagandaClient(new Eval() {

            @Override
            public String eval(PropagandaConnector connector, Datagram datagram) {
                String msg = datagram.getMessage().getText();
                rcnt++;
                receivedMsgs.append("" + rcnt + " received from: " + datagram.getSender().getUnsecureAddrTypeString()
                        + " to: " + datagram.getReceiver().getUnsecureAddrTypeString() + " msg: " + msg + "\n");
                receivedMsgs.setCaretPosition(receivedMsgs.getText().length());
                return msg;
            }
        });
    }

    int cnt = 0;

    void lastRegAs(String s) {
        sendFrom.addItem(s);
        sendFrom.getModel().setSelectedItem(s);
        lastReg.setText(lastReg.getText() + (cnt++ == 0 ? " " : ", ") + s);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sendBtn = new javax.swing.JButton();
        regBtn = new javax.swing.JButton();
        regName = new javax.swing.JComboBox();
        lastReg = new javax.swing.JLabel();
        sendTo = new javax.swing.JComboBox();
        message = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        pingBtn = new javax.swing.JButton();
        status = new javax.swing.JLabel();
        myRegName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        receivedMsgs = new javax.swing.JTextArea();
        sendFrom = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sendBtn.setText("Send now");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        regBtn.setText("Also register as");
        regBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regBtnActionPerformed(evt);
            }
        });

        regName.setEditable(true);
        regName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "d1@demo", "d2@demo", "d3@demo", "o1@other", "o2@other", "o3@other", "m1@monitor", "m2@monitor", "m3@monitor", " " }));

        lastReg.setText("Registred as:");

        sendTo.setEditable(true);
        sendTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "*@*", "*@CCFSERVER", "d1@demo", "d2@demo", "d3@demo", "*@demo", "o1@other", "o2@other", "o3@other", "*@other" }));

        message.setText("Hello world");

        jLabel2.setText("Message:");

        jSeparator1.setBounds(new java.awt.Rectangle(0, 2, 50, 10));

        jLabel3.setText("Received messages:");

        pingBtn.setText("Ping");
        pingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pingBtnActionPerformed(evt);
            }
        });

        status.setText("Status:");

        myRegName.setText("Reg");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        receivedMsgs.setColumns(200);
        receivedMsgs.setEditable(false);
        receivedMsgs.setLineWrap(true);
        receivedMsgs.setRows(1000);
        jScrollPane3.setViewportView(receivedMsgs);

        sendFrom.setEditable(true);
        sendFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "_", "." }));

        jLabel1.setText("from:");

        jLabel4.setText("to:");

        jLabel5.setText("_ = my first registred, . = anonymous");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 501, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 694, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1181, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lastReg, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1173, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(regBtn)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(regName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel4)
                                    .add(jLabel1)
                                    .add(jLabel2))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(sendFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 356, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel5))
                                    .add(sendTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 356, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(sendBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(pingBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(message, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1105, Short.MAX_VALUE)))
                            .add(layout.createSequentialGroup()
                                .add(myRegName)
                                .add(425, 425, 425)
                                .add(status, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 223, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(myRegName)
                    .add(status))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(regBtn)
                    .add(regName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lastReg)
                .add(7, 7, 7)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(36, 36, 36)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(sendFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(sendTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4)))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel2)
                        .add(message, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sendBtn)
                    .add(pingBtn))
                .add(18, 18, 18)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .add(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        String send_to = sendTo.getSelectedItem().toString();
        String send_from = sendFrom.getSelectedItem().toString();
        String msg = message.getText().toString().replace("\n", "¶");
        System.err.println("send_to: " + send_to);
        System.err.println("send_from: " + send_from);
        System.err.println("message: " + msg);
        try {
            Datagram datagram = new Datagram(AddrType.createAddrType(send_from),
                    AddrType.createAddrType(send_to),
                    new Message(msg));
            propagandaClient.sendMsg(datagram);
        } catch (PropagandaException ex) {
            System.err.println("message: " + ex);
        }
    }//GEN-LAST:event_sendBtnActionPerformed

    private void regBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regBtnActionPerformed
        String reg_name = regName.getSelectedItem().toString();
        System.err.println("reg_name: " + reg_name);
        try {
            propagandaClient.register(reg_name);
        } catch (Exception ex) {
            receivedMsgs.append("" + ex + "\n");
            return;
        }
        lastRegAs(reg_name);
    }//GEN-LAST:event_regBtnActionPerformed

    private void pingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pingBtnActionPerformed
        String send_to = sendTo.getSelectedItem().toString();
        System.err.println("send_to: " + send_to);
        try {
            propagandaClient.sendMsg(new Datagram(AddrType.defaultAddrType, AddrType.createAddrType(send_to), MessageType.ping, new Message("")));
        } catch (PropagandaException ex) {
            receivedMsgs.append("" + ex + "\n");
        }

    }//GEN-LAST:event_pingBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DemoClient().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lastReg;
    private javax.swing.JTextField message;
    private javax.swing.JLabel myRegName;
    private javax.swing.JButton pingBtn;
    private javax.swing.JTextArea receivedMsgs;
    private javax.swing.JButton regBtn;
    private javax.swing.JComboBox regName;
    private javax.swing.JButton sendBtn;
    private javax.swing.JComboBox sendFrom;
    private javax.swing.JComboBox sendTo;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables
}
